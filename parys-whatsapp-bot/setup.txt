

🧠 WhatsApp Bot Setup & ADHD Backup Brain

==============================================
Yo future me, if you're seeing this, you probably:

✅ Forgot what step you were on  
☕ Got distracted halfway through  
🍳 Are trying to finish this bot while cooking  
🤖 Or maybe you're debugging it while whispering "please work" to your terminal

No worries. Here's your full recovery cheat sheet 🛠️👇


---

📁 Main Project Folder: parys-whatsapp-bot/

📄 app.py               → Main bot brain  
📄 services.txt         → You write this (human friendly)  
📄 services.json        → Bot reads this (do not hand edit unless you’re a pro)  
📄 requirements.txt     → Python packages  
📂 backups/             → Auto-saves of services.json  
📂 versioning/          → Manual versions you name (like “launch-v1”)  
📂 magic-tool/          → Dev tools to convert, verify, backup, restore  
📂 logs/                → History of every time you ran `make.sh` (new!)




✅ Step-by-Step Setup (The Flow)

🔹 1. Edit `services.txt`  
   Each business follows the format:
   
   type: plumber  
   name: John’s Plumbing  
   phone: 0812345678  
   location: Tumahole  
   note: 24/7 services  
   sponsored: no


---

🔹 2. Run the Magic Tool  
From inside `magic-tool/`, run:

bash make.sh

That will:
✅ Verify required fields  
💾 Save a backup of your current JSON  
🪄 Generate a clean new services.json from TXT  
📜 Save a full log to the `logs/` folder

> 🧠 Logs are your memory when your brain isn't —
Every time you run make.sh, it saves a .log file like: logs/2025-06-18-1752-make.log
You’ll see exactly what happened, what passed, and what failed.
Future You will thank you 🙏





🔹 3. Install packages (if fresh setup):

pip install -r requirements.txt

🔹 4. Run the bot:

python app.py

You should see:
> Running on http://127.0.0.1:5000

🔹 5. Connect it to WhatsApp using Twilio:

- Visit: https://twilio.com/whatsapp  
- Activate the sandbox  
- Message the join code from your phone  
- Set your webhook to:

https://your-app-name.com/whatsapp

🔹 6. Test like a local hero:

I need a plumber  
Looking for a tutor  
Find a bakery




📦 Extra Commands You Might Use

🔁 bash backup.sh  
→ Manual backup of services.json (saves to /backups/)

📩 bash auto-ping.sh  
→ Triggers Netlify rebuild (requires build hook URL)

📩 bash auto-ping-Telegram-Whatsapp.sh  
→ Sends a message to your bot to say “yo we updated”

💾 bash save-version.sh  
→ Saves a labeled snapshot to /versioning/

🧪 python verify.py  
→ Checks for missing fields before things break

📜 logs/  
→ Stores a full history of every `make.sh` run (steps, errors, wins)




🧠 Quick ADHD Reminders:

☑️ Edited services.txt?  
☑️ Ran make.sh to rebuild + backup?  
☑️ Installed packages?  
☑️ Twilio sandbox connected?  
☑️ Bot responding to search phrases?  
☑️ You didn’t try to edit services.json by hand again, right? 😅  
☑️ Checked logs/ if something felt weird?




💡 Tips & Tricks

• sponsored: yes → Makes listing float to the top  
• Add categories like: baker, salon, mechanic, tutor, mobile repair  
• Ask ChatGPT to generate ad posters or social media captions  
• Planning to expand to Sasolburg or Vredefort? You totally can  
• Want to turn it into a public site? Use Netlify and json_to_txt.py




👊 Final Motivation (In case you’re tired):

You built this with no laptop, using your phone.  
You organized your chaos.  
You made a real product for your community.  

If all you earn is enough to cover the bot and save for a laptop,  
That’s still progress. That’s still power.  

Brick by brick. Bot by bot. 💻🛠️🔥  
– Still That Guy™

// If you’re 50, found this in a dusty hard drive, and forgot what this does —  
Just run bash make.sh  
Then drink some coffee.  
You got this.
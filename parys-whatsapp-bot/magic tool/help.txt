✨ WELCOME TO THE MAGIC TOOLKIT ✨

aka: "Stuff I made so I don't break things while cooking eggs" 🍳

Yo Future Me (or poor dev stuck here),

If you’re reading this, chances are:
✅ You forgot where you left off again.
✅ You’re editing businesses while on 5% battery.
✅ You updated services.txt and don’t wanna nuke everything.

Breathe. We got you. This folder is where the real sauce lives. Let’s go 🔧


📂 magic-tool/ — What Lives in Here

📄 help.txt  
→ This file. This chaos. This masterpiece. Don’t delete it.

📄 txt_to_json.py  
→ Converts `services.txt` ➜ `services.json`.  
   (The bot reads the JSON. You write the TXT.)

📄 json_to_txt.py  
→ Converts the other way (JSON ➜ TXT).  
   (Use this if you ever lose or mess up your TXT version.)

📄 verify.py  
→ Checks if every entry has:
   - `type`
   - `name`
   - `phone`
   - `location`
   - `note`
   - `sponsored` (must be `"yes"` or `"no"`)  
→ Tells you if anything’s missing so you don’t ship trash 🚮

📄 backup.sh  
→ Saves a copy of `services.json` to `/backups/` with a timestamp  
→ Run this **before** any updates, unless you like crying

📄 save-version.sh  
→ Lets you name a snapshot manually and saves it in `/versioning/`  
→ Example: `pre-launch`, `sponsor-update`, `v3.2b-hotfix`

📄 auto-ping.sh  
→ Triggers your Netlify preview to rebuild 🔁  
→ Needs a Netlify build hook (or replace with anything you want)

📄 auto-ping-Telegram-Whatsapp.sh  
→ Notifies your bot via curl (e.g. “Hey, Parys data was updated!”)  
→ Can use Twilio, WhatsApp API, or whatever

📄 make.sh  
→ The Mega Button. Press once, it:
   1. Verifies your file ✅  
   2. Makes a backup 💾  
   3. Converts TXT ➜ JSON 🪄  
   4. Logs the whole thing 📜  
→ Only runs if verify passes — no broken stuff allowed here 💅


🗂️ Folder Stuff (in Main Folder)

📄 app.py              ← Bot lives here  
📄 services.txt        ← You edit this  
📄 services.json       ← Bot reads this (don’t hand-edit unless you’re brave)  
📂 backups/            ← All automatic backups go here  
📂 versioning/         ← Snapshots you create with save-version.sh  
📂 logs/               ← Every run of `make.sh` gets logged here (for your sanity)


🧪 Workflow (So You Don’t Forget Again)

🪄 Step 1: Add or edit listings in `services.txt`

🪄 Step 2: Run this from inside `magic-tool/`:

bash make.sh

💡 It will:
✅ Check your JSON  
💾 Save a backup  
🪄 Build the new JSON  
📜 Save a log to `logs/` (with full output)  
🚫 Refuse to build if you messed up

🪄 Step 3: If needed, run one of these:

bash auto-ping.sh  ← to rebuild Netlify site  
bash auto-ping-Telegram-Whatsapp.sh ← to ping your bot

🪄 Step 4: (Optional but smart)

bash save-version.sh  
→ Give it a name like `tumahole-hotfix` or `panic-save`

🪄 Step 5: (If something broke)

Check `logs/` for what the heck went wrong 🕵️‍♂️



📜 What’s the Deal with logs/?

• Every run of `make.sh` creates a log file with timestamp  
• You’ll see exactly:
   - When you ran it  
   - If verification passed  
   - If the backup and conversion worked  
• Find them inside:

📂 logs/
└── 2025-06-18-1752-make.log

So if you ever go:
“Did I already update that bakery listing??”  
or  
“Why did it break today?”  
Boom. Logs got you. 🧠🗃️


🧠 FINAL THOUGHTS FROM PAST YOU

If you’re reading this on a future laptop, coffee in one hand,
and can’t remember what any of this does…

Just know:

You built this when you had no laptop.
You were cooking eggs on the side.
You still made it work.

So yeah. You’re still that guy. 🚀

Go run bash make.sh and get back to building.

– Chef Dev 🍳💻
